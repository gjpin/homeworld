# https://artifacthub.io/packages/helm/argo/argo-cd
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  namespace: argocd
spec:
  project: default
  destination:
    server: "https://kubernetes.default.svc"
    namespace: argocd
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - Validate=true
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
  source:
    chart: argo-cd
    repoURL: https://argoproj.github.io/argo-helm
    targetRevision: 8.1.3
    helm:
      fullnameOverride: argocd
      namespaceOverride: argocd

      # server
      server:
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
        autoscaling:
          enabled: true
          minReplicas: 1
          maxReplicas: 5
          targetCPUUtilizationPercentage: 80
          targetMemoryUtilizationPercentage: 80
        ingress:
          enabled: true
          ingressClassName: traefik
          annotations:
            traefik.ingress.kubernetes.io/router.entrypoints: websecure
            traefik.ingress.kubernetes.io/router.tls: "true"
            traefik.ingress.kubernetes.io/service.serversscheme: "http"
            cert-manager.io/cluster-issuer: letsencrypt-prod
            external-dns.alpha.kubernetes.io/hostname: argocd.${BASE_DOMAIN}
          hostname: argocd.${BASE_DOMAIN}
          tls: true
        ingressGrpc:
          enabled: true
          ingressClassName: traefik
          annotations:
            traefik.ingress.kubernetes.io/router.entrypoints: websecure
            traefik.ingress.kubernetes.io/router.tls: "true"
            traefik.ingress.kubernetes.io/service.serversscheme: "h2c"
            cert-manager.io/cluster-issuer: letsencrypt-prod
            external-dns.alpha.kubernetes.io/hostname: grpc.argocd.${BASE_DOMAIN}
          hostname: grpc.argocd.${BASE_DOMAIN}
          tls: true

      # repo server
      repoServer:
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
          limits:
            cpu: 50m
            memory: 128Mi
        autoscaling:
          enabled: true
          minReplicas: 1
          maxReplicas: 5
          targetCPUUtilizationPercentage: 80
          targetMemoryUtilizationPercentage: 80
      
      # controller
      controller:
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi

      # dex
      dex:
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            cpu: 50m
            memory: 64Mi
        initImage:
          resources:
            requests:
              cpu: 5m
              memory: 96Mi
            limits:
              cpu: 10m
              memory: 144Mi

      # redis
      redis:
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
        exporter:
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              cpu: 50m
              memory: 64Mi
      redisSecretInit:
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi

      # application set
      applicationSet:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 100m
            memory: 128Mi

      # notifications
      notifications:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 100m
            memory: 128Mi

      crds:
        install: true
        keep: true

      # TLS is terminated at Ingress Controller,
      # so we disable TLS in the API server.
      # https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#ingressroute-crd
      configs:
        params:
          server.insecure: true

      global:
        nodeSelector:
          node-role.kubernetes.io/homelab: homelab