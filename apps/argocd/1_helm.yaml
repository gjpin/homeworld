# https://artifacthub.io/packages/helm/argo/argo-cd
# https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-ssl-termination-at-ingress-controller
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  namespace: argocd
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - Validate=true
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
  source:
    chart: argo-cd
    repoURL: https://argoproj.github.io/argo-helm
    targetRevision: 8.2.1
    helm:
      releaseName: argocd
      valuesObject:
        fullnameOverride: argocd
        namespaceOverride: argocd

        # server
        server:
          metrics:
            enabled: true
            serviceMonitor:
              enabled: true
              interval: 60s

          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 200m
              memory: 512Mi
          autoscaling:
            enabled: true
            minReplicas: 1
            maxReplicas: 5
            targetCPUUtilizationPercentage: 80
            targetMemoryUtilizationPercentage: 80

        # repo server
        repoServer:
          metrics:
            enabled: true
            serviceMonitor:
              enabled: true
              interval: 60s
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          autoscaling:
            enabled: true
            minReplicas: 1
            maxReplicas: 5
            targetCPUUtilizationPercentage: 80
            targetMemoryUtilizationPercentage: 80
        
        # controller
        controller:
          metrics:
            enabled: true
            serviceMonitor:
              enabled: true
              interval: 60s
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 768Mi

        # dex
        dex:
          metrics:
            enabled: true
            serviceMonitor:
              enabled: true
              interval: 60s
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              cpu: 100m
              memory: 128Mi
          initImage:
            resources:
              requests:
                cpu: 5m
                memory: 96Mi
              limits:
                cpu: 10m
                memory: 144Mi

        # redis
        redis:
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
          exporter:
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
              limits:
                cpu: 50m
                memory: 64Mi
        redisSecretInit:
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi

        # application set
        applicationSet:
          metrics:
            enabled: true
            serviceMonitor:
              enabled: true
              interval: 60s
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 128Mi

        # notifications
        notifications:
          metrics:
            enabled: true
            serviceMonitor:
              enabled: true
              interval: 60s
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 128Mi

        crds:
          install: true
          keep: true

        # TLS is terminated at Ingress Controller,
        # so we disable TLS in the API server.
        # https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#ingressroute-crd
        configs:
          params:
            server.insecure: true

        global:
          nodeSelector:
            node-role.kubernetes.io/homelab: homelab
---